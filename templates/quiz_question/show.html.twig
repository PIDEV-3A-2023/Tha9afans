{% extends 'base.html.twig' %}

{% block title %}QuizQuestion{% endblock %}

{% block body %}
    <style>
        body {
            justify-content: center; /* centers content horizontally */
            align-items: center; /* centers content vertically */
            height: 100vh; /* makes sure the container fills the height of the viewport */

        }

        .display {
            background-color: #001A23;
            margin-bottom: 2%;
            margin-top: 5%;
            border-radius: 20px;
            container: inherit;
            display: flex;
            flex-direction: column; /* aligns child elements vertically */
            justify-content: center; /* centers child elements horizontally */
            align-items: center; /* centers child elements vertically */
            padding: 20px;
            max-width: 1200px; /* sets a maximum width for the container */
            width: 100%; /* makes sure the container fills the width of the viewport */
        }


        .question{
            color: white;
            font-size: 25px;
            margin-bottom: 20px;
            align-items: center; /* centers child elements vertically */

        }

        .image {
            margin: 20px 0;
            display: flex;
            justify-content: center; /* centers child elements horizontally */
            align-items: center; /* centers child elements vertically */
            width: 100%;

        }

        .image img {
            max-width: 50%; /* makes sure the image fits within the container */
            border-radius: 20px;
        }

        .answers{
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        button{
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .answers button{
            background-color: white;
            color: #001A23;
            font-size: 20px;
            padding: 10px 20px;
            border-radius: 10px;
            margin-bottom: 10px;
        }
        .flex{
            display: flex;

            width: 100%;
        }

    </style>

    <div class="display">
        <div class="flex">
            <div class="flex">
                <div class="question">Timer: {{ question.timer }}</div>
                <button id="skip-button">
                    Skip
                </button>
            </div>
            <br>
            <div class="question">{{ question.question }}</div>
        </div>
        <div class="image">
            {% if question.image is not empty %}
                <img src="{{ path('question_show_image', {'id': question.questionId}) }}" alt="{{ question.question }}">
            {% else %}
                Aucune photo disponible
            {% endif %}
        </div>
        <div class="answers">
            <button class="answer-button">{{ question.firstPossibleAnswer }}</button>
            <button class="answer-button">{{ question.secondPossibleAnswer }}</button>
            <button class="answer-button">{{ question.thirdPossibleAnswer }}</button>
        </div>
    </div>

    <script>
        const skipButton = document.getElementById('skip-button');
        // const answerButtons = document.querySelectorAll('.answer-button');

        // Retrieve the shuffled list of questions from the session variable
        const questions = {{ app.session.get('quizQuestions')|json_encode|raw }};
        const currentQuestionIndex = questions.findIndex(q => q.id === {{ question.questionId }});


        skipButton.addEventListener('click', () => {
            // Load the next question from the shuffled list
            const nextQuestionIndex = (currentQuestionIndex + 1) % questions.length;
            const nextQuestion = questions[nextQuestionIndex];

            // Update the URL with the ID of the next question
            window.location.href = '{{ path('app_quiz_question_start', {'id': quizId}) }}';
        });

        answerButtons.forEach(button => {
            button.addEventListener('click', () => {
                // Handle the user's answer to the current question
                // (you'll need to implement this functionality separately)
            });
        });
    </script>


{% endblock %}
